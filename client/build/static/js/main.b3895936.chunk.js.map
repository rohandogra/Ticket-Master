{"version":3,"sources":["config/axios.js","redux/actions/auth.js","redux/constant.js","components/userAuth/register.jsx","components/userAuth/login.jsx","components/navigation/NavBar.jsx","layouts/Layout.jsx","components/dashboard/Home.jsx","redux/actions/modalsAction.js","redux/actions/customerAction.js","components/utilityComponents/PageTitle.jsx","components/modals/CustomerAddModal.jsx","components/utilityComponents/ModalButton.jsx","components/modals/showCustomerModal.jsx","redux/actions/departmentAction.js","components/modals/DepartmentAddModal.jsx","redux/actions/employeeAction.js","components/modals/EmployeesAddModal.jsx","components/modals/ShowEmployeeModal.jsx","redux/actions/ticketAction.js","components/modals/TicketAddModal.jsx","components/modals/TicketShowModal.jsx","components/modals/rootModal.jsx","components/utilityComponents/PrivateRoute.jsx","components/utilityComponents/ConfirmModal.jsx","components/customers/customersShow.jsx","components/departments/DepartmentsShow.jsx","components/employees/EmployeesShow.jsx","components/tickets/TicketTable.jsx","components/tickets/TicketShow.jsx","components/userAuth/loginOtp.jsx","components/userAuth/Otp.jsx","App.js","redux/reducers/customerReducer.js","redux/reducers/departmentReducer.js","redux/reducers/modalsReducers.js","redux/reducers/userReducer.js","redux/reducers/employeeReducer.js","redux/reducers/ticketReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","index.js"],"names":["axios","Axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","ms","message","split","console","log","document","body","classList","remove","removeItem","Promise","reject","login","loginData","history","dispatch","a","type","payload","email","isOtp","post","res","success","push","otp","setItem","data","password","register","userData","connect","withRouter","props","useEffect","title","className","initialValues","user_name","onSubmit","values","handleSubmit","name","placeholder","as","Input","prefix","UserOutlined","style","fontSize","color","LockOutlined","htmlType","size","onClick","state","loading","userAuth","location","useLocation","to","pathname","Header","Layout","logout","window","theme","mode","defaultSelectedKeys","Item","key","Modal","confirm","icon","ExclamationCircleOutlined","okText","cancelText","onOk","children","Dashboard","showModal","getCustomers","get","then","catch","err","getCustomerById","id","PageTitle","onBack","subTitle","tags","extra","btnName","btnType","modal","modals","modalProps","createCustomers","formData","centered","visible","onCancel","modalType","width","footer","mobile","resetForm","touched","ModalButton","disabled","onClickClose1","onClickClose2","customer","customers","fetch","updateCustomer","put","JSON","parse","useRef","useState","setDisabled","innerRef","instance","enableReinitialize","getDepartments","createDepartment","_","getEmployees","EmployeeById","Option","Select","validationSchema","Yup","shape","min","max","required","departments","department","createEmployees","destroyOnClose","onChange","onBlur","restProps","validate","fast","render","msg","value","field","form","setFieldValue","setFieldTouched","option","undefined","map","dep","_id","employee","updateEmployees","EmployeeID","getTickets","updateTicket","TextArea","code","customerId","departmentId","employeesIds","priority","employees","createTicket","departmentSelected","setDepartmentSelected","filtredEmployees","filter","emp","cust","element","Group","event","target","ADD_CUSTOMER","CustomerAddModal","ADD_DEPARTMENT","DepartmentAddModal","ADD_EMPLOYEE","EmployeesAddModal","ADD_TICKET","TicketAddModal","SHOW_CUSTOMER","ShowCustomerModal","SHOW_EMPLOYEE","ShowEmployeeModal","SHOW_TICKET","ticket","tickets","getTicketById","ticket_ID","ele","PrivateRoute","Component","component","rest","from","ModalConfirm","loading1","deleteCustomer","delete","columns","dataIndex","record","stringify","action","length","dataSource","pagination","deleteDepartment","bordered","renderItem","item","actions","deleteEmployee","EmployeesData","deleteTicket","filters","text","onFilter","includes","tag","paddingLeft","defaultChecked","e","isResolved","checked","isChecked","pending","EmployeesDataCompleted","completed","current","TabPane","Tabs","Pending","Completed","defaultActiveKey","tab","all","setOtp","numInputs","isDisabled","preventDefault","inputStyle","errorStyle","separator","isInputNum","shouldAutoFocus","exact","path","CustomersShow","DepartmentsShow","EmployeesShow","TicketShow","Register","Login","loginOtp","Otp","initialState","rootReducer","combineReducers","createStoreWithMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","composeEnhancers","createStore","store","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b3895936.chunk.js","sourcesContent":["import Axios from \"axios\";\n\nconst axios = Axios.create({\n  baseURL: `api/user`,\n});\n\naxios.interceptors.request.use(function (config) {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = token ? `${token}` : \"\";\n\n  return config;\n});\n\naxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    const ms = error.message.split(\" \")[5];\n    console.log(ms, \"msg\");\n    document.body.classList.remove(\"loading-indicator\");\n    if (ms === \"403\") {\n      localStorage.removeItem(\"token\");\n      // window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axios;\n","import axios from \"../../config/axios\";\nimport { message } from \"antd\";\nimport * as types from \"../constant\";\n\nconst login = (loginData, history) => async (dispatch) => {\n  console.log(loginData, \"action\");\n  dispatch({ type: types.LOGIN_LOADER, payload: true });\n  try {\n    if (loginData.email && loginData.isOtp) {\n      const res = await axios.post(\"/login\", loginData);\n      console.log(res, \"action\");\n      dispatch({ type: types.LOGIN_LOADER, payload: false });\n      message.success(\"Otp Sent Successfully\");\n      history.push(\"/otp\");\n    }\n    if (loginData.otp && loginData.email) {\n      const res = await axios.post(\"/login\", loginData);\n      console.log(res, \"action\");\n      dispatch({ type: types.LOGIN_LOADER, payload: false });\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.removeItem(\"email\");\n      message.success(\"Successfully Logged in\");\n      history.push(\"/\");\n    }\n    if (loginData.email && loginData.password) {\n      const res = await axios.post(\"/login\", loginData);\n      console.log(res, \"action\");\n      dispatch({ type: types.LOGIN_LOADER, payload: false });\n      localStorage.setItem(\"token\", res.data.token);\n      message.success(\"Successfully Logged in\");\n      history.push(\"/\");\n    }\n  } catch (e) {\n    dispatch({ type: types.LOGIN_LOADER, payload: false });\n    if (e.response) return message.error(e.response.data);\n    console.log(e);\n  }\n};\n\nconst register = async (userData, history) => {\n  console.log(userData);\n  try {\n    await axios.post(\"/register\", userData);\n    message.success(\"Register Successfully\");\n    history.push(\"/login\");\n  } catch (err) {\n    console.log(err);\n    if (err.response) return message.error(err.response.data);\n  }\n};\n\nconst logout = () => (dispatch) => {\n  localStorage.removeItem(\"token\");\n  message.success(\"Logged out Successfully.\");\n  dispatch({ type: \"RESET\" });\n};\n\nexport { login, register, logout };\n","export const SHOW_MODAL = \"SHOW_MODAL\";\n\n//* Get All\nexport const GET_CUSTOMERS = \"GET_CUSTOMERS\";\nexport const GET_DEPARTMENTS = \"GET_DEPARTMENTS\";\nexport const GET_EMPLOYEES = \"GET_EMPLOYEES\";\nexport const GET_TICKETS = \"GET_TICKETS\";\n\n//* Get by ID\nexport const GET_CUSTOMERSBYID = \"GET_CUSTOMERSBYID\";\nexport const EMPLOYEE_BY_ID = \"EMPLOYEE_BY_ID\";\nexport const GET_TICKETBYID = \"GET_TICKETBYID\";\n\n//*  Loaders\nexport const LOGIN_LOADER = \"LOGIN_LOADER\";\nexport const CUSTOMERS_LOADER = \"CUSTOMERS_LOADER\";\nexport const DEPARTMENT_LOADER = \"DEPARTMENT_LOADER\";\nexport const EMPLOYEES_LOADER = \"EMPLOYEES_LOADER\";\nexport const TICKET_LOADER = \"TICKET_LOADER\";\n\nexport const EMPLOYEE_BY_ID_LOADER = \"EMPLOYEE_BY_ID_LOADER\";\nexport const TICKET_BY_ID_LOADER = \"TICKET_BY_ID_LOADER\";\nexport const CUSTOMERSBYID_LOADER = \"CUSTOMERSBYID_LOADER\";\n","import React, { useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { register } from '../../redux/actions/auth'\nimport \"./auth.scss\"\n\nfunction Register(props) {\n  useEffect(() => {\n    document.title = \"Register\"\n  })\n  return (\n    <div className='login-form'>\n      <div className='login-card'>\n        <Formik\n          initialValues={{ user_name: \"\", email: '', password: '' }}\n          onSubmit={(values) => {\n            props.register(values, props.history)\n          }}\n        >\n          {({ handleSubmit }) => (\n            <div className=\"login-form\">\n              <div className=\"login-text\">\n                Register\n              </div>\n              <Form onSubmit={handleSubmit}>\n                <div className='input-wrapper mb-3'>\n                  <label className=''>User Name</label>\n                  <Field className='' name='user_name' type='text' placeholder='Type your User Name' as={Input} prefix={<UserOutlined style={{\n                    fontSize: 22,\n                    color: '#adadad',\n                  }} />} />\n                </div>\n                <div className='input-wrapper mb-3'>\n                  <label className=''>Email</label>\n                  <Field className='' name='email' type='text' placeholder='Type your Email' as={Input} prefix={<UserOutlined style={{\n                    fontSize: 22,\n                    color: '#adadad',\n                  }} />} />\n                </div>\n                <div className='input-wrapper'>\n                  <label className=''>Password</label>\n                  <Field className='' name='password' type='password' placeholder=\"Type your password\" as={Input} prefix={<LockOutlined style={{\n                    fontSize: 22,\n                    color: '#adadad',\n                  }} />} />\n                </div>\n                <div className='login-btn'>\n                  <Button htmlType='submit' type=\"primary\" size=\"large\" >Register</Button>\n                </div>\n              </Form>\n              <div className='sign-up'>\n                <div className='sign-up-text-1'>\n                  Or Login\n                </div>\n                <div className='sign-up-text-2' onClick={() => props.history.push('/login')}>\n                  Login\n                </div>\n              </div>\n            </div>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\nexport default connect(null, { register })(withRouter(Register));\n","import React, { useEffect } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect, useLocation } from \"react-router-dom\";\nimport { login } from \"../../redux/actions/auth\";\nimport \"./auth.scss\";\n\nfunction Login(props) {\n  const token = localStorage.getItem(\"token\");\n  const location = useLocation();\n\n  useEffect(() => {\n    document.title = \"Login\";\n  });\n\n  return (\n    <div className=\"login-form\">\n      {!token ? (\n        <div className=\"login-card\">\n          <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            onSubmit={(values) => {\n              props.login(values, props.history);\n            }}\n          >\n            {({ handleSubmit }) => (\n              <div className=\"login-form\">\n                <div className=\"login-text\">Login</div>\n                <Form onSubmit={handleSubmit}>\n                  <div className=\"input-wrapper mb-3\">\n                    <label className=\"\">Email</label>\n                    <Field\n                      className=\"\"\n                      name=\"email\"\n                      type=\"text\"\n                      placeholder=\"Type your Email\"\n                      as={Input}\n                      prefix={\n                        <UserOutlined\n                          style={{\n                            fontSize: 22,\n                            color: \"#adadad\",\n                          }}\n                        />\n                      }\n                    />\n                  </div>\n                  <div className=\"input-wrapper\">\n                    <label className=\"\">Password</label>\n                    <Field\n                      className=\"\"\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"Type your password\"\n                      as={Input}\n                      prefix={\n                        <LockOutlined\n                          style={{\n                            fontSize: 22,\n                            color: \"#adadad\",\n                          }}\n                        />\n                      }\n                    />\n                  </div>\n                  <div className=\"login-btn\">\n                    <div className=\"submit-login\">\n                      <Button\n                        loading={props.loading}\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        size=\"large\"\n                      >\n                        Login\n                      </Button>\n                    </div>\n                    <Button\n                      onClick={() => props.history.push(\"/loginotp\")}\n                      type=\"primary\"\n                      size=\"large\"\n                    >\n                      Or Login using Otp\n                    </Button>\n                  </div>\n                </Form>\n                <div className=\"sign-up\">\n                  <div className=\"sign-up-text-1\">Or Sign Up</div>\n                  <div\n                    className=\"sign-up-text-2\"\n                    onClick={() => props.history.push(\"/register\")}\n                  >\n                    SIGN UP\n                  </div>\n                </div>\n              </div>\n            )}\n          </Formik>\n        </div>\n      ) : (\n        <Redirect to={`${location.pathname}`} />\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.userAuth.loading,\n});\n\nexport default connect(mapStateToProps, { login })(withRouter(Login));\n","import React from \"react\";\nimport { Menu, Layout, Modal } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.scss\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../redux/actions/auth\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nconst { Header } = Layout;\n\nconst NavBar = (props) => {\n  const location = window.location.pathname.split(\"/\")[1];\n\n  return (\n    <Header>\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={location}>\n        <Menu.Item key=\"home\">\n          <Link to=\"/home\">Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"customers\">\n          <Link to=\"/customers\">Customers</Link>\n        </Menu.Item>\n        <Menu.Item key=\"departments\">\n          <Link to=\"/departments\">Departments</Link>\n        </Menu.Item>\n        <Menu.Item key=\"employees\">\n          <Link to=\"/employees\">Employees</Link>\n        </Menu.Item>\n        <Menu.Item key=\"tickets\">\n          <Link to=\"/tickets\">Tickets</Link>\n        </Menu.Item>\n        <Menu.Item className=\"logout\" key=\"logout\">\n          <span\n            onClick={() =>\n              Modal.confirm({\n                title: \"you are about to be logged out?\",\n                icon: <ExclamationCircleOutlined />,\n                // content: \"Bla bla ...\",\n                okText: \"Ok\",\n                cancelText: \"Cancle\",\n                onOk: () => {\n                  localStorage.removeItem(\"token\");\n                  window.location = \"/login\";\n                },\n              })\n            }\n          >\n            Logout\n          </span>\n        </Menu.Item>\n      </Menu>\n    </Header>\n  );\n};\n\nexport default connect(null, { logout })(NavBar);\n","import React, { useEffect } from \"react\";\nimport \"./layout.scss\";\nimport NavBar from \"../components/navigation/NavBar.jsx\";\n\nconst Layout = (props) => {\n  const title = props?.title;\n\n  useEffect(() => {\n    document.title = title ? title : \"Ticket-Mater\";\n  }, [title]);\n  return (\n    <div>\n      <NavBar />\n      <div className=\"layout\">{props.children}</div>\n    </div>\n  );\n};\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"../../layouts/Layout\";\n\nfunction Dashboard() {\n  return (\n    <Layout>\n      <h1>Dashboard</h1>\n    </Layout>\n  );\n}\nexport default Dashboard;\n","import { SHOW_MODAL } from \"../constant\";\r\n\r\nconst showModal = (data) => (dispatch) => {\r\n  return dispatch({\r\n    type: SHOW_MODAL,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport { showModal };\r\n","import * as types from \"../constant\";\r\nimport axios from \"../../config/axios\";\r\nimport { message } from \"antd\";\r\n\r\nconst getCustomers = (history) => (dispatch) => {\r\n  dispatch({ type: types.CUSTOMERS_LOADER, payload: true });\r\n  axios\r\n    .get(\"/customers\")\r\n    .then((response) => {\r\n      dispatch({ type: types.CUSTOMERS_LOADER, payload: false });\r\n      dispatch({\r\n        type: types.GET_CUSTOMERS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst getCustomerById = (id) => (dispatch) => {\r\n  dispatch({ type: types.CUSTOMERSBYID_LOADER, payload: true });\r\n  axios\r\n    .get(`/customers/${id}`)\r\n    .then((response) => {\r\n      dispatch({ type: types.CUSTOMERSBYID_LOADER, payload: false });\r\n      dispatch({\r\n        type: types.GET_CUSTOMERSBYID,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst createCustomers = (formData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/customers\", formData)\r\n    .then((response) => {\r\n      if (response) {\r\n        dispatch(getCustomers());\r\n        message.success(\"Customer Created Successfully\");\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n};\r\n\r\nconst deleteCustomer = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/customers/${id}`)\r\n    .then((_) => {\r\n      message.success(\"Customer Deleted Successfully\");\r\n      dispatch(getCustomers());\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n};\r\n\r\nconst updateCustomer = (data, id) => (dispatch) => {\r\n  console.log(data, \"updateCustomer\");\r\n  axios\r\n    .put(`/customers/${id}`, data)\r\n    .then((res) => {\r\n      dispatch(getCustomerById(id));\r\n      // dispatch(getCustomers());\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n};\r\n\r\nexport {\r\n  getCustomers,\r\n  createCustomers,\r\n  deleteCustomer,\r\n  getCustomerById,\r\n  updateCustomer,\r\n};\r\n","import React from \"react\";\r\nimport { PageHeader, Button } from \"antd\";\r\nimport \"./PageTitle.scss\";\r\n\r\nfunction PageTitle(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"modal__container\">\r\n        <PageHeader\r\n          className=\"modal__pageHeader\"\r\n          onBack={props.onBack ? props.onBack : false}\r\n          title={props.title}\r\n          subTitle={props.subTitle}\r\n          tags={props.tags}\r\n          extra={props.extra}\r\n        />\r\n        {props.btnName ? (\r\n          <div className=\"modal__btn\">\r\n            <Button type={props.btnType} onClick={props.onClick}>\r\n              {props.btnName}\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport { Modal, Input, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { createCustomers } from \"../../redux/actions/customerAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Formik, Field, Form } from \"formik\";\r\n// import * as Yup from \"yup\";\r\nimport \"./formModal.scss\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//   name: Yup.string().required(\"Required\"),\r\n//   module: Yup.number()\r\n//     .min(10, \"Too Short!\")\r\n//     .max(10, \"Too Long!\")\r\n//     .required(\"Required\"),\r\n//   email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n// });\r\n\r\nfunction CustomerAddModal(props) {\r\n  return (\r\n    <Modal\r\n      title=\"\"\r\n      centered\r\n      visible={props.modal}\r\n      onCancel={() => {\r\n        props.showModal({\r\n          modalType: \"ADD_CUSTOMER\",\r\n          modalProps: false,\r\n        });\r\n      }}\r\n      width={500}\r\n      footer={null}\r\n    >\r\n      <Formik\r\n        initialValues={{ name: \"\", email: \"\", mobile: \"\" }}\r\n        // validate={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          props.createCustomers(values);\r\n          resetForm();\r\n          props.showModal({\r\n            modalType: \"ADD_CUSTOMER\",\r\n            modalProps: false,\r\n          });\r\n        }}\r\n      >\r\n        {({ handleSubmit, touched, error }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            {/* <div className=\"form__headerText\">Add Customer</div> */}\r\n            <PageTitle title=\"Add Customer\" />\r\n            <div className=\"form__inputContainer\">\r\n              <label>Name</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"name\"\r\n                  className=\"form__inputr\"\r\n                  placeholder=\"Enter You're Full Name\"\r\n                  type=\"text\"\r\n                  as={Input}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Email</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"email\"\r\n                  placeholder=\"Enter You're Email\"\r\n                  type=\"email\"\r\n                  as={Input}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Mobile</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"mobile\"\r\n                  placeholder=\"Enter You're Mobile\"\r\n                  type=\"number\"\r\n                  as={Input}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"modal__btn\">\r\n              <Button className=\"modal__submit\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>{\" \"}\r\n              <Button\r\n                className=\"modal__close\"\r\n                onClick={() => {\r\n                  props.showModal({\r\n                    modalType: \"ADD_CUSTOMER\",\r\n                    modalProps: false,\r\n                  });\r\n                }}\r\n                type=\"primary\"\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals.modalProps,\r\n});\r\n\r\nexport default connect(mapStateToProps, { showModal, createCustomers })(\r\n  withRouter(CustomerAddModal)\r\n);\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nfunction ModalButton(props) {\r\n  return (\r\n    <div className=\"form__btn\">\r\n      {props.disabled ? (\r\n        <Button\r\n          className=\"modal__close\"\r\n          onClick={props.onClickClose1}\r\n          type=\"primary\"\r\n        >\r\n          Close\r\n        </Button>\r\n      ) : (\r\n        <div className=\"modal__btn\">\r\n          <Button className=\"modal__submit\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            className=\"modal__close\"\r\n            onClick={props.onClickClose2}\r\n            type=\"primary\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalButton;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Modal, Input, Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  getCustomerById,\r\n  updateCustomer,\r\n  getCustomers,\r\n} from \"../../redux/actions/customerAction\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport ModalButton from \"../utilityComponents/ModalButton\";\r\n\r\nconst ShowCustomerModal = (props) => {\r\n  document.title = props.modal === false ? \"Customers\" : \"Customer Details\";\r\n\r\n  const id = JSON.parse(localStorage.getItem(\"Customer_ID\"));\r\n\r\n  let formikRef = useRef(null);\r\n\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  useEffect(() => {\r\n    id && props.getCustomerById(id);\r\n  }, [id]);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"\"\r\n      centered\r\n      // destroyOnClose={true}\r\n      visible={props.modal}\r\n      onCancel={() => {\r\n        localStorage.removeItem(\"Customer_ID\");\r\n        setDisabled(true);\r\n\r\n        props.showModal({\r\n          modalType: \"SHOW_CUSTOMER\",\r\n          modalProps: false,\r\n        });\r\n      }}\r\n      width={500}\r\n      footer={null}\r\n    >\r\n      <Formik\r\n        innerRef={(instance) => {\r\n          formikRef = instance;\r\n        }}\r\n        initialValues={{\r\n          name: props?.customer?.name || \"\",\r\n          email: props?.customer?.email || \"\",\r\n          mobile: props?.customer?.mobile || \"\",\r\n        }}\r\n        enableReinitialize={true}\r\n        // validate={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          //   props.createCustomers(values);\r\n          props.updateCustomer(values, id);\r\n          resetForm({ values: \"\" });\r\n          setDisabled(true);\r\n          props.showModal({\r\n            modalType: \"SHOW_CUSTOMER\",\r\n            modalProps: false,\r\n          });\r\n          props.getCustomers();\r\n        }}\r\n      >\r\n        {({ handleSubmit, touched, error }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <PageTitle\r\n              title={`Customer ${disabled ? \"Details\" : \"Edit\"}`}\r\n              btnName=\"Edit\"\r\n              onClick={() => {\r\n                setDisabled(!disabled);\r\n              }}\r\n              btnType={disabled === false && \"primary\"}\r\n            />\r\n\r\n            <div className=\"form__inputContainer\">\r\n              <label>Name</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <Field\r\n                    name=\"name\"\r\n                    className=\"form__inputr\"\r\n                    placeholder=\"Enter You're Full Name\"\r\n                    type=\"text\"\r\n                    as={Input}\r\n                    disabled={disabled}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Email</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <Field\r\n                    name=\"email\"\r\n                    placeholder=\"Enter You're Email\"\r\n                    type=\"email\"\r\n                    as={Input}\r\n                    disabled={disabled}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Mobile</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <Field\r\n                    name=\"mobile\"\r\n                    placeholder=\"Enter You're Mobile\"\r\n                    type=\"number\"\r\n                    as={Input}\r\n                    disabled={disabled}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <ModalButton\r\n              disabled={disabled}\r\n              onClickClose1={() => {\r\n                localStorage.removeItem(\"Customer_ID\");\r\n                props.showModal({\r\n                  modalType: \"SHOW_CUSTOMER\",\r\n                  modalProps: false,\r\n                });\r\n              }}\r\n              onClickClose2={() => {\r\n                setDisabled(!disabled);\r\n                localStorage.removeItem(\"Customer_ID\");\r\n                props.showModal({\r\n                  modalType: \"SHOW_CUSTOMER\",\r\n                  modalProps: false,\r\n                });\r\n              }}\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals.modalProps,\r\n  customer: state.customers.customer,\r\n  loading: state.customers.fetch,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  showModal,\r\n  getCustomerById,\r\n  updateCustomer,\r\n  getCustomers,\r\n})(withRouter(ShowCustomerModal));\r\n","import * as types from \"../constant\";\r\nimport axios from \"../../config/axios\";\r\nimport { message } from \"antd\";\r\n\r\nconst getDepartments = () => (dispatch) => {\r\n  dispatch({ type: types.DEPARTMENT_LOADER, payload: true });\r\n  axios\r\n    .get(\"/departments\")\r\n    .then((res) => {\r\n      dispatch({ type: types.DEPARTMENT_LOADER, payload: false });\r\n      dispatch({\r\n        type: types.GET_DEPARTMENTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst createDepartment = (data) => (dispatch) => {\r\n  axios\r\n    .post(\"/departments\", data)\r\n    .then((_) => {\r\n      dispatch(getDepartments());\r\n      message.success(\"Department Created Successfully\");\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n};\r\n\r\nconst deleteDepartment = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/departments/${id}`)\r\n    .then((_) => {\r\n      dispatch(getDepartments());\r\n      message.success(\"Department Deleted Successfully\");\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n};\r\n\r\nexport { getDepartments, createDepartment, deleteDepartment };\r\n","import React from \"react\";\r\nimport { Modal, Input, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { createDepartment } from \"../../redux/actions/departmentAction\";\r\n// import { withRouter } from \"react-router-dom\";\r\nimport { Formik, Field, Form } from \"formik\";\r\n// import * as Yup from \"yup\";\r\nimport \"./formModal.scss\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\n\r\nfunction DepartmentAddModal(props) {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"\"\r\n        centered\r\n        visible={props.modal}\r\n        onCancel={() => {\r\n          props.showModal({\r\n            modalType: \"ADD_DEPARTMENT\",\r\n            modalProps: false,\r\n          });\r\n        }}\r\n        width={500}\r\n        footer={null}\r\n      >\r\n        <Formik\r\n          initialValues={{ name: \"\" }}\r\n          // validate={validationSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            props.createDepartment(values);\r\n            resetForm();\r\n            props.showModal({\r\n              modalType: \"ADD_DEPARTMENT\",\r\n              modalProps: false,\r\n            });\r\n          }}\r\n        >\r\n          {({ handleSubmit, touched, error }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              {/* <div className=\"form__headerText\">Add Customer</div> */}\r\n              <PageTitle title=\"Add Department\" />\r\n              <div className=\"form__inputContainer\">\r\n                <label className=\"department__label\">Department Name</label>\r\n                <div className=\"form__input\">\r\n                  <Field\r\n                    name=\"name\"\r\n                    className=\"form__inputr\"\r\n                    placeholder=\"Enter Department Name\"\r\n                    type=\"text\"\r\n                    as={Input}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"modal__btn\">\r\n                <Button className=\"modal__submit\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  className=\"modal__close\"\r\n                  onClick={() => {\r\n                    props.showModal({\r\n                      modalType: \"ADD_DEPARTMENT\",\r\n                      modalProps: false,\r\n                    });\r\n                  }}\r\n                  type=\"primary\"\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals.modalProps,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createDepartment, showModal })(\r\n  DepartmentAddModal\r\n);\r\n","import * as types from \"../constant\";\r\nimport axios from \"../../config/axios\";\r\nimport { message } from \"antd\";\r\n\r\nconst getEmployees = (history) => (dispatch) => {\r\n  dispatch({ type: types.EMPLOYEES_LOADER, payload: true });\r\n  axios\r\n    .get(\"/employees\")\r\n    .then((response) => {\r\n      dispatch({ type: types.EMPLOYEES_LOADER, payload: false });\r\n      dispatch({\r\n        type: types.GET_EMPLOYEES,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst createEmployees = (data) => (dispatch) => {\r\n  // dispatch({ type: types.EMPLOYEES_LOADER, payload: true });\r\n  axios\r\n    .post(\"/employees\", data)\r\n    .then((response) => {\r\n      message.success(\"Employee Created Successfully\");\r\n      dispatch(getEmployees());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst deleteEmployee = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/employees/${id}`)\r\n    .then((_) => {\r\n      message.success(\"Employee Deleted Successfully\");\r\n      dispatch(getEmployees());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst EmployeeById = (id) => (dispatch) => {\r\n  dispatch({ type: types.EMPLOYEE_BY_ID_LOADER, payload: true });\r\n  axios\r\n    .get(`/employees/${id}`)\r\n    .then((response) => {\r\n      dispatch({ type: types.EMPLOYEE_BY_ID_LOADER, payload: false });\r\n      dispatch({\r\n        type: types.EMPLOYEE_BY_ID,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst updateEmployees = (id, data) => (dispatch) => {\r\n  axios\r\n    .put(`/employees/${id}`, data)\r\n    .then((_) => {\r\n      message.success(\"Employee Updated Successfully\");\r\n      dispatch(EmployeeById(id));\r\n      dispatch(getEmployees());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport {\r\n  getEmployees,\r\n  createEmployees,\r\n  deleteEmployee,\r\n  EmployeeById,\r\n  updateEmployees,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal, Input, Button, Select } from \"antd\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { createEmployees } from \"../../redux/actions/employeeAction\";\r\nimport { getDepartments } from \"../../redux/actions/departmentAction\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(70, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\n\r\nfunction EmployeesAddModal(props) {\r\n  const { departments } = props;\r\n\r\n  useEffect(() => {\r\n    props.getDepartments();\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"\"\r\n      centered\r\n      destroyOnClose\r\n      visible={props.modal}\r\n      onCancel={() => {\r\n        props.showModal({\r\n          modalType: \"ADD_EMPLOYEE\",\r\n          modalProps: false,\r\n        });\r\n      }}\r\n      width={500}\r\n      footer={null}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          mobile: \"\",\r\n          department: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          props.createEmployees(values);\r\n          resetForm();\r\n          props.showModal({\r\n            modalType: \"ADD_EMPLOYEE\",\r\n            modalProps: false,\r\n          });\r\n        }}\r\n      >\r\n        {({ onChange, onBlur, restProps, validate, fast }) => (\r\n          <Form>\r\n            {/* <div className=\"form__headerText\">Add Customer</div> */}\r\n            <PageTitle title=\"Add Employee\" />\r\n            <div className=\"form__inputContainer\">\r\n              <label>Name</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"name\"\r\n                  className=\"form__inputr\"\r\n                  placeholder=\"Enter You're Full Name\"\r\n                  type=\"text\"\r\n                  as={Input}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"name\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Email</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"email\"\r\n                  placeholder=\"Enter You're Email\"\r\n                  type=\"email\"\r\n                  as={Input}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Mobile</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"mobile\"\r\n                  placeholder=\"Enter You're Mobile\"\r\n                  type=\"number\"\r\n                  as={Input}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Department</label>\r\n              <div className=\"form__input\">\r\n                <Field name=\"department\" validate={validate} fast={fast}>\r\n                  {({\r\n                    field: { value },\r\n                    form: { setFieldValue, setFieldTouched },\r\n                  }) => (\r\n                    <Select\r\n                      style={{ width: \"100% \" }}\r\n                      onChange={(value, option) => {\r\n                        setFieldValue(\"department\", value);\r\n                        onChange && onChange(value, option);\r\n                      }}\r\n                      onBlur={(value) => {\r\n                        setFieldTouched(\"department\");\r\n                        onBlur && onBlur(value);\r\n                      }}\r\n                      placeholder=\"Select Department\"\r\n                      // setting undefined will show the placeholder\r\n                      value={value === \"\" || value === null ? undefined : value}\r\n                      {...restProps}\r\n                    >\r\n                      {departments.map((dep) => (\r\n                        <Option value={dep._id} key={dep._id}>\r\n                          {dep.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal__btn\">\r\n              <Button className=\"modal__submit\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>{\" \"}\r\n              <Button\r\n                className=\"modal__close\"\r\n                onClick={() => {\r\n                  props.showModal({\r\n                    modalType: \"ADD_EMPLOYEE\",\r\n                    modalProps: false,\r\n                  });\r\n                }}\r\n                type=\"primary\"\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals.modalProps,\r\n  departments: state.department.department,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  showModal,\r\n  createEmployees,\r\n  getDepartments,\r\n})(EmployeesAddModal);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Input, Spin, Select } from \"antd\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport {\r\n  updateEmployees,\r\n  EmployeeById,\r\n} from \"../../redux/actions/employeeAction\";\r\nimport { getDepartments } from \"../../redux/actions/departmentAction\";\r\nimport * as Yup from \"yup\";\r\nimport ModalButton from \"../utilityComponents/ModalButton\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(70, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\n\r\nfunction EmployeesShowModal(props) {\r\n  const { departments, employee } = props;\r\n  const EmployeeID = JSON.parse(localStorage.getItem(\"Employee_ID\"));\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (EmployeeID) {\r\n      return props.EmployeeById(EmployeeID), props.getDepartments();\r\n    }\r\n  }, [EmployeeID]);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"\"\r\n      centered\r\n      destroyOnClose\r\n      visible={props.modal}\r\n      onCancel={() => {\r\n        props.showModal({\r\n          modalType: \"SHOW_EMPLOYEE\",\r\n          modalProps: false,\r\n        });\r\n      }}\r\n      width={500}\r\n      footer={null}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          name: employee.name || \"\",\r\n          email: employee.email || \"\",\r\n          mobile: employee.mobile || \"\",\r\n          department: employee?.department?._id || \"\",\r\n        }}\r\n        enableReinitialize\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          props.updateEmployees(EmployeeID, values);\r\n          resetForm();\r\n          setDisabled(true);\r\n          //   props.showModal({\r\n          //     modalType: \"SHOW_EMPLOYEE\",\r\n          //     modalProps: false,\r\n          //   });\r\n        }}\r\n      >\r\n        {({ onChange, onBlur, restProps, validate, fast }) => (\r\n          <Form>\r\n            {/* <div className=\"form__headerText\">Add Customer</div> */}\r\n            <PageTitle\r\n              title=\"Employee Details\"\r\n              btnName=\"Edit\"\r\n              onClick={() => setDisabled(!disabled)}\r\n              btnType={disabled === false && \"primary\"}\r\n            />\r\n\r\n            <div className=\"form__inputContainer\">\r\n              <label>Name</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <Field\r\n                    name=\"name\"\r\n                    className=\"form__inputr\"\r\n                    placeholder=\"Enter You're Full Name\"\r\n                    type=\"text\"\r\n                    as={Input}\r\n                    disabled={disabled}\r\n                  />\r\n                )}\r\n                <ErrorMessage\r\n                  name=\"name\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Email</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <Field\r\n                    name=\"email\"\r\n                    placeholder=\"Enter You're Email\"\r\n                    type=\"email\"\r\n                    as={Input}\r\n                    disabled={disabled}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Mobile</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <Field\r\n                    name=\"mobile\"\r\n                    placeholder=\"Enter You're Mobile\"\r\n                    type=\"number\"\r\n                    as={Input}\r\n                    disabled={disabled}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Department</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <Field name=\"department\" validate={validate} fast={fast}>\r\n                    {({\r\n                      field: { value },\r\n                      form: { setFieldValue, setFieldTouched },\r\n                    }) => (\r\n                      <Select\r\n                        style={{ width: \"100% \" }}\r\n                        onChange={(value, option) => {\r\n                          setFieldValue(\"department\", value);\r\n                          onChange && onChange(value, option);\r\n                        }}\r\n                        disabled={true}\r\n                        onBlur={(value) => {\r\n                          setFieldTouched(\"department\");\r\n                          onBlur && onBlur(value);\r\n                        }}\r\n                        placeholder=\"Select Department\"\r\n                        // setting undefined will show the placeholder\r\n                        value={\r\n                          value === \"\" || value === null ? undefined : value\r\n                        }\r\n                        {...restProps}\r\n                      >\r\n                        {departments.map((dep) => (\r\n                          <Option value={dep._id} key={dep._id}>\r\n                            {dep.name}\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    )}\r\n                  </Field>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <ModalButton\r\n              disabled={disabled}\r\n              onClickClose1={() => {\r\n                localStorage.removeItem(\"Employee_ID\");\r\n                props.showModal({\r\n                  modalType: \"SHOW_EMPLOYEE\",\r\n                  modalProps: false,\r\n                });\r\n              }}\r\n              onClickClose2={() => {\r\n                setDisabled(!disabled);\r\n                localStorage.removeItem(\"Employee_ID\");\r\n                props.showModal({\r\n                  modalType: \"SHOW_EMPLOYEE\",\r\n                  modalProps: false,\r\n                });\r\n              }}\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals.modalProps,\r\n  departments: state.department.department,\r\n  employee: state.employee.employee,\r\n  loading: state.employee.fetch,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  showModal,\r\n  EmployeeById,\r\n  getDepartments,\r\n  updateEmployees,\r\n})(EmployeesShowModal);\r\n","import * as types from \"../constant\";\r\nimport axios from \"../../config/axios\";\r\nimport { message } from \"antd\";\r\n\r\nconst getTickets = () => (dispatch) => {\r\n  dispatch({ type: types.TICKET_LOADER, payload: true });\r\n  axios\r\n    .get(\"/tickets?page=0&&limit=10\")\r\n    .then((response) => {\r\n      dispatch({ type: types.TICKET_LOADER, payload: false });\r\n      dispatch({\r\n        type: types.GET_TICKETS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n};\r\n\r\nconst getTicketById = (id) => (dispatch) => {\r\n  dispatch({ type: types.TICKET_BY_ID_LOADER, payload: true });\r\n  axios\r\n    .get(`/tickets/${id}`)\r\n    .then((response) => {\r\n      dispatch({ type: types.TICKET_BY_ID_LOADER, payload: false });\r\n      dispatch({\r\n        type: types.GET_TICKETBYID,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n};\r\n\r\nconst createTicket = (data) => (dispatch) => {\r\n  axios\r\n    .post(\"/tickets\", data)\r\n    .then((_) => {\r\n      message.success(\"Ticket Created Successfully.\");\r\n      dispatch(getTickets());\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n};\r\n\r\nconst updateTicket = (id, data) => (dispatch) => {\r\n  console.log(id, data, \"action\");\r\n  axios\r\n    .put(`/tickets/${id}`, data)\r\n    .then((_) => {\r\n      message.success(\"Ticket Updated successfully\");\r\n      dispatch(getTickets());\r\n    })\r\n    .catch((err) => message.error(err.message));\r\n};\r\n\r\nconst deleteTicket = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/tickets/${id}`)\r\n    .then((_) => {\r\n      message.success(\"Ticket Deleted successfully\");\r\n      dispatch(getTickets());\r\n    })\r\n    .catch((err) => message.error(err.message));\r\n};\r\n\r\nexport { getTickets, getTicketById, createTicket, updateTicket, deleteTicket };\r\n","import React, { useEffect, useState, Children } from \"react\";\r\nimport { Modal, Input, Button, Select, Radio } from \"antd\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { getCustomers } from \"../../redux/actions/customerAction\";\r\nimport { getDepartments } from \"../../redux/actions/departmentAction\";\r\nimport { getEmployees } from \"../../redux/actions/employeeAction\";\r\nimport { createTicket } from \"../../redux/actions/ticketAction\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst validationSchema = Yup.object().shape({\r\n  code: Yup.string().required(\"Required\"),\r\n  title: Yup.string().required(\"Required\"),\r\n  customerId: Yup.string().required(\"Required\"),\r\n  departmentId: Yup.string().required(\"Required\"),\r\n  employeesIds: Yup.string().required(\"Required\"),\r\n  message: Yup.string().required(\"Required\"),\r\n  priority: Yup.string().required(\"Required\"),\r\n});\r\n\r\nfunction TicketAddModal(props) {\r\n  const [departmentSelected, setDepartmentSelected] = useState(\"\");\r\n\r\n  const { customers, departments, employees } = props;\r\n\r\n  useEffect(() => {\r\n    props.getCustomers();\r\n    props.getDepartments();\r\n    props.getEmployees();\r\n  }, []);\r\n\r\n  const filtredEmployees = employees.filter(\r\n    (emp) => emp.department._id == departmentSelected\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      title=\"\"\r\n      centered\r\n      destroyOnClose\r\n      visible={props.modal}\r\n      onCancel={() => {\r\n        props.showModal({\r\n          modalType: \"ADD_TICKET\",\r\n          modalProps: false,\r\n        });\r\n      }}\r\n      width={500}\r\n      footer={null}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          code: \"\",\r\n          title: \"\",\r\n          customerId: \"\",\r\n          departmentId: \"\",\r\n          employeesIds: [],\r\n          message: \"\",\r\n          priority: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          props.createTicket(values);\r\n          resetForm();\r\n          props.showModal({\r\n            modalType: \"ADD_TICKET\",\r\n            modalProps: false,\r\n          });\r\n        }}\r\n      >\r\n        {({ onChange, onBlur, restProps, validate, fast }) => (\r\n          <Form>\r\n            {/* <div className=\"form__headerText\">Add Customer</div> */}\r\n            <PageTitle title=\"Add Ticket\" />\r\n            <div className=\"form__inputContainer\">\r\n              <label>Code</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"code\"\r\n                  className=\"form__inputr\"\r\n                  placeholder=\"Enter Code\"\r\n                  type=\"number\"\r\n                  as={Input}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"code\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Title</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"title\"\r\n                  placeholder=\"Enter Title\"\r\n                  type=\"text\"\r\n                  as={Input}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"title\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Customer</label>\r\n              <div className=\"form__input\">\r\n                <Field name=\"customerId\" validate={validate} fast={fast}>\r\n                  {({\r\n                    field: { value },\r\n                    form: { setFieldValue, setFieldTouched },\r\n                  }) => (\r\n                    <Select\r\n                      style={{ width: \"100% \" }}\r\n                      onChange={(value, option) => {\r\n                        setFieldValue(\"customerId\", value);\r\n                        onChange && onChange(value, option);\r\n                      }}\r\n                      onBlur={(value) => {\r\n                        setFieldTouched(\"customerId\");\r\n                        onBlur && onBlur(value);\r\n                      }}\r\n                      placeholder=\"Select Customer\"\r\n                      // setting undefined will show the placeholder\r\n                      value={value === \"\" || value === null ? undefined : value}\r\n                      {...restProps}\r\n                    >\r\n                      {customers &&\r\n                        customers?.map((cust) => (\r\n                          <Option value={cust._id} key={cust._id}>\r\n                            {cust.name}\r\n                          </Option>\r\n                        ))}\r\n                    </Select>\r\n                  )}\r\n                </Field>\r\n                <ErrorMessage\r\n                  name=\"customerId\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Department</label>\r\n              <div className=\"form__input\">\r\n                <Field name=\"departmentId\" validate={validate} fast={fast}>\r\n                  {({\r\n                    field: { value },\r\n                    form: { setFieldValue, setFieldTouched },\r\n                  }) => (\r\n                    <Select\r\n                      style={{ width: \"100% \" }}\r\n                      onChange={(value, option) => {\r\n                        setFieldValue(\r\n                          \"departmentId\",\r\n                          value,\r\n                          setDepartmentSelected(value)\r\n                        );\r\n                        onChange && onChange(value, option);\r\n                      }}\r\n                      onBlur={(value) => {\r\n                        setFieldTouched(\"departmentId\");\r\n                        onBlur && onBlur(value);\r\n                      }}\r\n                      placeholder=\"Select Department\"\r\n                      // setting undefined will show the placeholder\r\n                      value={value === \"\" || value === null ? undefined : value}\r\n                      {...restProps}\r\n                    >\r\n                      {departments.map((dep) => (\r\n                        <Option value={dep._id} key={dep._id}>\r\n                          {dep.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </Field>\r\n                <ErrorMessage\r\n                  name=\"departmentId\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form__inputContainer\">\r\n              <label>Employees</label>\r\n              <div className=\"form__input\">\r\n                <Field name=\"employeesIds\" validate={validate} fast={fast}>\r\n                  {({\r\n                    field: { value },\r\n                    form: { setFieldValue, setFieldTouched },\r\n                  }) => (\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: \"100% \" }}\r\n                      onChange={(value, option) => {\r\n                        setFieldValue(\"employeesIds\", value);\r\n                        onChange && onChange(value, option);\r\n                      }}\r\n                      onBlur={(value) => {\r\n                        setFieldTouched(\"employeesIds\");\r\n                        onBlur && onBlur(value);\r\n                      }}\r\n                      placeholder=\"Select Employees\"\r\n                      // setting undefined will show the placeholder\r\n                      value={value === \"\" || value === null ? undefined : value}\r\n                      {...restProps}\r\n                    >\r\n                      {filtredEmployees.map((element) => (\r\n                        <Option value={element._id} key={element._id}>\r\n                          {element.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </Field>\r\n                <ErrorMessage\r\n                  name=\"employeesIds\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form__inputContainer\">\r\n              <label>Message</label>\r\n              <div className=\"form__input\">\r\n                <Field\r\n                  name=\"message\"\r\n                  placeholder=\"Enter message\"\r\n                  type=\"text\"\r\n                  as={TextArea}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"message\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form__inputContainer\">\r\n              <label>Priority</label>\r\n              <div className=\"form__input\">\r\n                <Field name=\"priority\" validate={validate} fast={fast}>\r\n                  {({\r\n                    field: { value },\r\n                    form: { setFieldValue, setFieldTouched },\r\n                  }) => (\r\n                    <Radio.Group\r\n                      value={value}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"priority\", event.target.value);\r\n                        setFieldTouched(\"priority\", true, false);\r\n                        onChange && onChange(event);\r\n                      }}\r\n                      {...restProps}\r\n                    >\r\n                      <Radio value={\"high\"}>High</Radio>\r\n                      <Radio value={\"medium\"}>Medium</Radio>\r\n                      <Radio value={\"low\"}>Low</Radio>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Field>\r\n                <ErrorMessage\r\n                  name=\"priority\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"modal__btn\">\r\n              <Button className=\"modal__submit\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>{\" \"}\r\n              <Button\r\n                className=\"modal__close\"\r\n                onClick={() => {\r\n                  props.showModal({\r\n                    modalType: \"ADD_TICKET\",\r\n                    modalProps: false,\r\n                  });\r\n                }}\r\n                type=\"primary\"\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals.modalProps,\r\n  customers: state.customers.customers,\r\n  departments: state.department.department,\r\n  employees: state.employee.employees,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  showModal,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  createTicket,\r\n})(TicketAddModal);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Input, Button, Select, Radio, Spin } from \"antd\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { getCustomers } from \"../../redux/actions/customerAction\";\r\nimport { getDepartments } from \"../../redux/actions/departmentAction\";\r\nimport { getEmployees } from \"../../redux/actions/employeeAction\";\r\nimport { updateTicket, getTicketById } from \"../../redux/actions/ticketAction\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().required(\"Required\"),\r\n  customerId: Yup.string().required(\"Required\"),\r\n  departmentId: Yup.string().required(\"Required\"),\r\n  employeesIds: Yup.string().required(\"Required\"),\r\n  message: Yup.string().required(\"Required\"),\r\n  priority: Yup.string().required(\"Required\"),\r\n});\r\n\r\nfunction TicketShowModal(props) {\r\n  const [departmentSelected, setDepartmentSelected] = useState(\"\");\r\n\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  const ticket_ID = JSON.parse(localStorage.getItem(\"ticket_ID\"));\r\n\r\n  const { customers, departments, employees, ticket } = props;\r\n\r\n  useEffect(() => {\r\n    props.getCustomers();\r\n    props.getTicketById(ticket_ID);\r\n    props.getDepartments();\r\n    props.getEmployees();\r\n  }, [ticket_ID]);\r\n\r\n  const id =\r\n    departmentSelected === \"\" ? ticket?.departmentId?._id : departmentSelected;\r\n\r\n  const filtredEmployees = employees?.filter(\r\n    (emp) => emp.department._id === id\r\n  );\r\n\r\n  console.log(departmentSelected, \"departments\");\r\n  console.log(departments, \"departments All\");\r\n\r\n  return (\r\n    <Modal\r\n      title=\"\"\r\n      centered\r\n      destroyOnClose\r\n      visible={props.modal}\r\n      onCancel={() => {\r\n        props.showModal({\r\n          modalType: \"ADD_TICKET\",\r\n          modalProps: false,\r\n        });\r\n      }}\r\n      width={500}\r\n      footer={null}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          code: ticket.code || \"\",\r\n          title: ticket.title || \"\",\r\n          customerId: ticket.customerId?._id || \"\",\r\n          departmentId: departmentSelected\r\n            ? departmentSelected\r\n            : ticket.departmentId?._id || \"\",\r\n          employeesIds: !departmentSelected\r\n            ? ticket?.employeesIds?.map((ele) => ele?._id)\r\n            : [],\r\n          message: ticket.message || \"\",\r\n          priority: ticket.priority || \"\",\r\n        }}\r\n        enableReinitialize\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          props.updateTicket(ticket_ID, values);\r\n          resetForm();\r\n          props.showModal({\r\n            modalType: \"ADD_TICKET\",\r\n            modalProps: false,\r\n          });\r\n        }}\r\n      >\r\n        {({ onChange, onBlur, restProps, validate, fast }) => (\r\n          <Form>\r\n            {/* <div className=\"form__headerText\">Add Customer</div> */}\r\n            <PageTitle\r\n              title=\"Add New Ticket\"\r\n              btnName=\"Edit\"\r\n              onClick={() => setDisabled(!disabled)}\r\n              btnType={disabled === false && \"primary\"}\r\n            />\r\n            <div className=\"form__inputContainer\">\r\n              <label>Code</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <Field\r\n                    name=\"code\"\r\n                    className=\"form__inputr\"\r\n                    placeholder=\"Enter Code\"\r\n                    type=\"text\"\r\n                    as={Input}\r\n                    disabled={disabled}\r\n                  />\r\n                )}\r\n                <ErrorMessage\r\n                  name=\"code\"\r\n                  render={(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Title</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <div>\r\n                    <Field\r\n                      name=\"title\"\r\n                      placeholder=\"Enter Title\"\r\n                      type=\"text\"\r\n                      as={Input}\r\n                      disabled={disabled}\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"title\"\r\n                      render={(msg) => (\r\n                        <div style={{ color: \"red\" }}>{msg}</div>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Customer</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <div>\r\n                    <Field name=\"customerId\" validate={validate} fast={fast}>\r\n                      {({\r\n                        field: { value },\r\n                        form: { setFieldValue, setFieldTouched },\r\n                      }) => (\r\n                        <Select\r\n                          disabled={disabled}\r\n                          style={{ width: \"100% \" }}\r\n                          onChange={(value, option) => {\r\n                            setFieldValue(\"customerId\", value);\r\n                            onChange && onChange(value, option);\r\n                          }}\r\n                          onBlur={(value) => {\r\n                            setFieldTouched(\"customerId\");\r\n                            onBlur && onBlur(value);\r\n                          }}\r\n                          placeholder=\"Select Customer\"\r\n                          // setting undefined will show the placeholder\r\n                          value={\r\n                            value === \"\" || value === null ? undefined : value\r\n                          }\r\n                          {...restProps}\r\n                        >\r\n                          {customers &&\r\n                            customers?.map((cust) => (\r\n                              <Option value={cust._id} key={cust._id}>\r\n                                {cust.name}\r\n                              </Option>\r\n                            ))}\r\n                        </Select>\r\n                      )}\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"customerId\"\r\n                      render={(msg) => (\r\n                        <div style={{ color: \"red\" }}>{msg}</div>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form__inputContainer\">\r\n              <label>Department</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <div>\r\n                    <Field name=\"departmentId\" validate={validate} fast={fast}>\r\n                      {({\r\n                        field: { value },\r\n                        form: { setFieldValue, setFieldTouched },\r\n                      }) => (\r\n                        <Select\r\n                          disabled={disabled}\r\n                          style={{ width: \"100% \" }}\r\n                          onChange={(value, option) => {\r\n                            setFieldValue(\r\n                              \"departmentId\",\r\n                              value,\r\n                              setDepartmentSelected(value)\r\n                            );\r\n                            onChange && onChange(value, option);\r\n                          }}\r\n                          onBlur={(value) => {\r\n                            setFieldTouched(\"departmentId\");\r\n                            onBlur && onBlur(value);\r\n                          }}\r\n                          placeholder=\"Select Department\"\r\n                          // setting undefined will show the placeholder\r\n                          value={\r\n                            value === \"\" || value === null ? undefined : value\r\n                          }\r\n                          {...restProps}\r\n                        >\r\n                          {departments.map((dep) => (\r\n                            <Option value={dep._id} key={dep._id}>\r\n                              {dep.name}\r\n                            </Option>\r\n                          ))}\r\n                        </Select>\r\n                      )}\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"departmentId\"\r\n                      render={(msg) => (\r\n                        <div style={{ color: \"red\" }}>{msg}</div>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form__inputContainer\">\r\n              <label>Employees</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <div>\r\n                    <Field name=\"employeesIds\" validate={validate} fast={fast}>\r\n                      {({\r\n                        field: { value },\r\n                        form: { setFieldValue, setFieldTouched },\r\n                      }) => (\r\n                        <Select\r\n                          disabled={disabled}\r\n                          mode=\"multiple\"\r\n                          style={{ width: \"100% \" }}\r\n                          onChange={(value, option) => {\r\n                            setFieldValue(\"employeesIds\", value);\r\n                            onChange && onChange(value, option);\r\n                          }}\r\n                          onBlur={(value) => {\r\n                            setFieldTouched(\"employeesIds\");\r\n                            onBlur && onBlur(value);\r\n                          }}\r\n                          placeholder=\"Select Employees\"\r\n                          // setting undefined will show the placeholder\r\n                          value={\r\n                            value === \"\" || value === null ? undefined : value\r\n                          }\r\n                          {...restProps}\r\n                        >\r\n                          {filtredEmployees?.map((element) => (\r\n                            <Option value={element?._id} key={element?._id}>\r\n                              {element?.name}\r\n                            </Option>\r\n                          ))}\r\n                        </Select>\r\n                      )}\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"employeesIds\"\r\n                      render={(msg) => (\r\n                        <div style={{ color: \"red\" }}>{msg}</div>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form__inputContainer\">\r\n              <label>Message</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <div>\r\n                    <Field\r\n                      disabled={disabled}\r\n                      name=\"message\"\r\n                      placeholder=\"Enter message\"\r\n                      type=\"text\"\r\n                      as={TextArea}\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"message\"\r\n                      render={(msg) => (\r\n                        <div style={{ color: \"red\" }}>{msg}</div>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form__inputContainer\">\r\n              <label>Priority</label>\r\n              <div className=\"form__input\">\r\n                {props.loading ? (\r\n                  <Spin />\r\n                ) : (\r\n                  <div>\r\n                    <Field name=\"priority\" validate={validate} fast={fast}>\r\n                      {({\r\n                        field: { value },\r\n                        form: { setFieldValue, setFieldTouched },\r\n                      }) => (\r\n                        <Radio.Group\r\n                          disabled={disabled}\r\n                          value={value}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"priority\", event.target.value);\r\n                            setFieldTouched(\"priority\", true, false);\r\n                            onChange && onChange(event);\r\n                          }}\r\n                          {...restProps}\r\n                        >\r\n                          <Radio value={\"high\"}>High</Radio>\r\n                          <Radio value={\"medium\"}>Medium</Radio>\r\n                          <Radio value={\"low\"}>Low</Radio>\r\n                        </Radio.Group>\r\n                      )}\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"priority\"\r\n                      render={(msg) => (\r\n                        <div style={{ color: \"red\" }}>{msg}</div>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"modal__btn\">\r\n              <Button className=\"modal__submit\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                className=\"modal__close\"\r\n                onClick={() => {\r\n                  props.showModal({\r\n                    modalType: \"ADD_TICKET\",\r\n                    modalProps: false,\r\n                  });\r\n                }}\r\n                type=\"primary\"\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals.modalProps,\r\n  customers: state.customers.customers,\r\n  departments: state.department.department,\r\n  employees: state.employee.employees,\r\n  ticket: state.tickets.ticket,\r\n  loading: state.tickets.fetch,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  showModal,\r\n  getTicketById,\r\n  getCustomers,\r\n  getDepartments,\r\n  getEmployees,\r\n  updateTicket,\r\n})(TicketShowModal);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomerAddModal from \"./CustomerAddModal\";\r\nimport ShowCustomerModal from \"./showCustomerModal\";\r\nimport DepartmentAddModal from \"./DepartmentAddModal\";\r\nimport EmployeesAddModal from \"./EmployeesAddModal\";\r\nimport ShowEmployeeModal from \"./ShowEmployeeModal\";\r\nimport TicketAddModal from \"./TicketAddModal\";\r\nimport TicketShowModal from \"./TicketShowModal\";\r\n\r\nconst modals = {\r\n  ADD_CUSTOMER: CustomerAddModal,\r\n  ADD_DEPARTMENT: DepartmentAddModal,\r\n  ADD_EMPLOYEE: EmployeesAddModal,\r\n  ADD_TICKET: TicketAddModal,\r\n  SHOW_CUSTOMER: ShowCustomerModal,\r\n  SHOW_EMPLOYEE: ShowEmployeeModal,\r\n  SHOW_TICKET: TicketShowModal,\r\n};\r\n\r\nconst RootModal = (props) => {\r\n  const { modalType, modalProps } = props.modal;\r\n\r\n  if (!modalType) {\r\n    return null;\r\n  }\r\n\r\n  const Modal = modals[modalType];\r\n\r\n  return <Modal {...modalProps} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals,\r\n});\r\n\r\nexport default connect(mapStateToProps)(RootModal);\r\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !localStorage.getItem(\"token\") ||\n      localStorage.getItem(\"token\") === undefined ? (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n","import React from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst ModalConfirm = (props) => {\r\n  const handleDelete = () => {\r\n    Modal.confirm({\r\n      title: props.title,\r\n      icon: <ExclamationCircleOutlined />,\r\n      // content: \"Bla bla ...\",\r\n      okText: \"Ok\",\r\n      cancelText: \"Cancle\",\r\n      onOk: props.onOk,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button type={props.btnType} onClick={handleDelete}>\r\n      {props.btnName}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","import React, { useEffect } from \"react\";\r\nimport { Table, Button } from \"antd\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCustomers,\r\n  deleteCustomer,\r\n} from \"../../redux/actions/customerAction\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport ModalConfirm from \"../utilityComponents/ConfirmModal\";\r\nimport \"./customers.scss\";\r\n\r\nfunction CustomersShow(props) {\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n    },\r\n    {\r\n      title: \"Mobile\",\r\n      dataIndex: \"mobile\",\r\n      key: \"mobile\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <div className=\"customer__ActionButtonContainer\">\r\n          <Button\r\n            onClick={() => {\r\n              localStorage.setItem(\"Customer_ID\", JSON.stringify(record));\r\n              props.showModal({\r\n                modalType: \"SHOW_CUSTOMER\",\r\n                modalProps: true,\r\n              });\r\n            }}\r\n            className=\"customer_ActionShow\"\r\n          >\r\n            Show\r\n          </Button>\r\n          <ModalConfirm\r\n            title=\"Are you sure?\"\r\n            btnType=\"danger\"\r\n            btnName=\"Delete\"\r\n            onOk={() => {\r\n              props.deleteCustomer(record);\r\n            }}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const { customers } = props;\r\n\r\n  const cust = customers?.map((ele) => ({\r\n    ...ele,\r\n    key: ele._id,\r\n    action: ele._id,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (customers.length === 0) return props.getCustomers();\r\n  }, [customers._id, customers.name, customers.email]);\r\n  console.log(customers.length, \"not\");\r\n  return (\r\n    <Layout title=\"Customers\" className=\"customerShow\">\r\n      <PageTitle\r\n        title=\"Customers\"\r\n        onBack={() => props.history.push(\"/\")}\r\n        subTitle={customers?.length}\r\n        btnName=\"Add New Customer\"\r\n        onClick={() => {\r\n          props.showModal({\r\n            modalType: \"ADD_CUSTOMER\",\r\n            modalProps: true,\r\n          });\r\n        }}\r\n      />\r\n      <Table\r\n        dataSource={cust}\r\n        loading={props.loading}\r\n        columns={columns}\r\n        pagination={false}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals,\r\n  customers: state.customers.customers,\r\n  loading: state.customers.loading1,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCustomers,\r\n  showModal,\r\n  deleteCustomer,\r\n})(CustomersShow);\r\n","import React, { useEffect } from \"react\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport { List } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getDepartments,\r\n  deleteDepartment,\r\n} from \"../../redux/actions/departmentAction\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport ModalConfirm from \"../utilityComponents/ConfirmModal.jsx\";\r\n\r\nfunction DepartmentsShow(props) {\r\n  useEffect(() => {\r\n    if (props.department.length === 0) props.getDepartments();\r\n  }, []);\r\n  return (\r\n    <Layout title=\"Departments\">\r\n      <PageTitle\r\n        title=\"Departments\"\r\n        subTitle={props.department.length}\r\n        onBack={() => props.history.push(\"/\")}\r\n        btnName=\"Add New Department\"\r\n        onClick={() =>\r\n          props.showModal({\r\n            modalType: \"ADD_DEPARTMENT\",\r\n            modalProps: true,\r\n          })\r\n        }\r\n      />\r\n\r\n      <List\r\n        bordered\r\n        loading={props.loading}\r\n        dataSource={props.department.map((ele) => ele)}\r\n        pagination={true}\r\n        renderItem={(item) => (\r\n          <List.Item\r\n            actions={[\r\n              <ModalConfirm\r\n                title=\"Are you sure?\"\r\n                btnType=\"danger\"\r\n                btnName=\"Delete\"\r\n                onOk={() => {\r\n                  props.deleteDepartment(item._id);\r\n                }}\r\n              />,\r\n            ]}\r\n          >\r\n            {item.name}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  department: state.department.department,\r\n  loading: state.department.loading,\r\n  modal: state.modals.modalProps,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getDepartments,\r\n  showModal,\r\n  deleteDepartment,\r\n})(DepartmentsShow);\r\n","import React, { useEffect } from \"react\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { Table, Button } from \"antd\";\r\nimport {\r\n  getEmployees,\r\n  deleteEmployee,\r\n} from \"../../redux/actions/employeeAction\";\r\nimport ModalConfirm from \"../utilityComponents/ConfirmModal\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction EmployeesShow(props) {\r\n  const { employees } = props;\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n    },\r\n    {\r\n      title: \"Mobile\",\r\n      dataIndex: \"mobile\",\r\n      key: \"mobile\",\r\n    },\r\n    {\r\n      title: \"Department\",\r\n      dataIndex: \"department\",\r\n      key: \"department\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <div className=\"customer__ActionButtonContainer\">\r\n          <Button\r\n            onClick={() => {\r\n              localStorage.setItem(\"Employee_ID\", JSON.stringify(record));\r\n              props.showModal({\r\n                modalType: \"SHOW_EMPLOYEE\",\r\n                modalProps: true,\r\n              });\r\n            }}\r\n            className=\"customer_ActionShow\"\r\n          >\r\n            Show\r\n          </Button>\r\n          <ModalConfirm\r\n            title=\"Are you sure?\"\r\n            btnType=\"danger\"\r\n            btnName=\"Delete\"\r\n            onOk={() => {\r\n              props.deleteEmployee(record);\r\n            }}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    document.title = \"Employees\";\r\n    if (employees.length === 0) props.getEmployees();\r\n  }, []);\r\n\r\n  const EmployeesData = employees?.map((emp) => ({\r\n    key: emp?._id,\r\n    name: emp?.name,\r\n    email: emp?.email,\r\n    mobile: emp?.mobile,\r\n    department: emp.department?.name,\r\n    action: emp._id,\r\n  }));\r\n\r\n  return (\r\n    <Layout>\r\n      <PageTitle\r\n        title=\"Employees\"\r\n        btnName=\"Add New Employee\"\r\n        onBack={() => props.history.push(\"/\")}\r\n        subTitle={employees.length}\r\n        onClick={() => {\r\n          props.showModal({\r\n            modalType: \"ADD_EMPLOYEE\",\r\n            modalProps: true,\r\n          });\r\n        }}\r\n      />\r\n      <Table\r\n        dataSource={EmployeesData}\r\n        loading={props.loading}\r\n        columns={columns}\r\n        pagination={false}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals,\r\n  employees: state.employee.employees,\r\n  loading: state.employee.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  showModal,\r\n  getEmployees,\r\n  deleteEmployee,\r\n})(EmployeesShow);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { Table, Button, Checkbox, Tag } from \"antd\";\r\nimport { deleteTicket, updateTicket } from \"../../redux/actions/ticketAction\";\r\nimport ModalConfirm from \"../utilityComponents/ConfirmModal\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDepartments } from \"../../redux/actions/departmentAction\";\r\n\r\nfunction TicketTable(props) {\r\n  const isChecked = (id, e) => {\r\n    props.updateTicket(id, { isResolved: e.target.checked });\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.getDepartments();\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      title: \"Code\",\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n    },\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      dataIndex: \"customerId\",\r\n      key: \"customerId\",\r\n    },\r\n    {\r\n      title: \"Department\",\r\n      dataIndex: \"departmentId\",\r\n      key: \"departmentId\",\r\n      filters: props.department.map((ele) => ({\r\n        text: ele.name,\r\n        value: ele.name,\r\n      })),\r\n      onFilter: (value, record) => record.departmentId.includes(value),\r\n    },\r\n    {\r\n      title: \"Employees\",\r\n      dataIndex: \"employeesIds\",\r\n      key: \"employeesIds\",\r\n      render: (employeesIds) => (\r\n        <>\r\n          {employeesIds.map((tag) => {\r\n            const color = \"volcano\";\r\n\r\n            return (\r\n              <Tag color={color} key={tag._id}>\r\n                {tag.name}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      filters: [\r\n        { text: \"high\", value: \"high\" },\r\n        { text: \"medium\", value: \"medium\" },\r\n        { text: \"low\", value: \"low\" },\r\n      ],\r\n      onFilter: (value, record) => record.priority.includes(value),\r\n    },\r\n    {\r\n      title: \"Resolved\",\r\n      dataIndex: \"isResolved\",\r\n      key: \"isResolved\",\r\n      render: (record) => (\r\n        <div>\r\n          <Checkbox\r\n            style={{ paddingLeft: \"15%\" }}\r\n            defaultChecked={record.state}\r\n            onChange={(e) => isChecked(record.id, e)}\r\n          ></Checkbox>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      render: (record) => (\r\n        <div className=\"customer__ActionButtonContainer\">\r\n          <Button\r\n            onClick={() => {\r\n              localStorage.setItem(\"ticket_ID\", JSON.stringify(record));\r\n              props.showModal({\r\n                modalType: \"SHOW_TICKET\",\r\n                modalProps: true,\r\n              });\r\n            }}\r\n            className=\"customer_ActionShow\"\r\n          >\r\n            Show\r\n          </Button>\r\n          <ModalConfirm\r\n            title=\"Are you sure?\"\r\n            btnType=\"danger\"\r\n            btnName=\"Delete\"\r\n            onOk={() => {\r\n              props.deleteTicket(record);\r\n            }}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const EmployeesData = props.pending?.map((ticket) => ({\r\n    key: ticket?._id,\r\n    code: ticket?.code,\r\n    title: ticket?.title,\r\n    customerId: ticket?.customerId.name,\r\n    departmentId: ticket.departmentId?.name,\r\n    employeesIds: ticket.employeesIds.map((emp) => emp),\r\n    priority: ticket.priority,\r\n    isResolved: { id: ticket._id, state: ticket.isResolved },\r\n    action: ticket._id,\r\n  }));\r\n\r\n  const EmployeesDataCompleted = props.completed?.map((ticket) => ({\r\n    key: ticket?._id,\r\n    code: ticket?.code,\r\n    title: ticket?.title,\r\n    customerId: ticket?.customerId.name,\r\n    departmentId: ticket.departmentId?.name,\r\n    employeesIds: ticket.employeesIds.map((emp) => emp),\r\n    priority: ticket.priority,\r\n    isResolved: { id: ticket._id, state: ticket.isResolved },\r\n    action: ticket._id,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      {props.current === \"Pending\" ? (\r\n        <Table\r\n          dataSource={EmployeesData}\r\n          loading={props.loading}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n      ) : (\r\n        <Table\r\n          dataSource={EmployeesDataCompleted}\r\n          loading={props.loading}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals,\r\n  tickets: state.tickets.tickets,\r\n  loading: state.tickets.loading,\r\n  department: state.department.department,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  showModal,\r\n  updateTicket,\r\n  getDepartments,\r\n  deleteTicket,\r\n})(TicketTable);\r\n","import React, { useEffect } from \"react\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport PageTitle from \"../utilityComponents/PageTitle\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../redux/actions/modalsAction\";\r\nimport { getTickets } from \"../../redux/actions/ticketAction\";\r\nimport { Tabs } from \"antd\";\r\nimport TicketTable from \"./TicketTable\";\r\nconst { TabPane } = Tabs;\r\n\r\nfunction TicketShow(props) {\r\n  const { tickets } = props;\r\n  useEffect(() => {\r\n    document.title = \"Tickets\";\r\n    if (tickets.length === 0) props.getTickets();\r\n  }, []);\r\n\r\n  const Pending = props.tickets.filter((ticket) => ticket.isResolved === false);\r\n  const Completed = props.tickets.filter(\r\n    (ticket) => ticket.isResolved === true\r\n  );\r\n  return (\r\n    <Layout>\r\n      <PageTitle\r\n        title=\"Tickets\"\r\n        onBack={() => props.history.push(\"/\")}\r\n        btnName=\"Add New Ticket\"\r\n        onClick={() => {\r\n          props.showModal({\r\n            modalType: \"ADD_TICKET\",\r\n            modalProps: true,\r\n          });\r\n        }}\r\n      />\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab={`Pending ${Pending.length}`} key=\"Pending\">\r\n          <TicketTable\r\n            current=\"Pending\"\r\n            pending={Pending}\r\n            all={props.tickets}\r\n          />\r\n        </TabPane>\r\n        <TabPane tab={`Completed ${Completed.length}`} key=\"Completed\">\r\n          <TicketTable current=\"Completed\" completed={Completed} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modals.modalProps,\r\n  tickets: state.tickets.tickets,\r\n});\r\n\r\nexport default connect(mapStateToProps, { showModal, getTickets })(TicketShow);\r\n","import React, { useEffect } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Input, Button } from \"antd\";\r\nimport { UserOutlined, MobileOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { login } from \"../../redux/actions/auth\";\r\nimport \"./auth.scss\";\r\n\r\nfunction LoginOtp(props) {\r\n  useEffect(() => {\r\n    document.title = \"Login\";\r\n  });\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <div className=\"login-card\">\r\n        <Formik\r\n          initialValues={{ email: \"\", isOtp: true }}\r\n          onSubmit={(values) => {\r\n            console.log(values);\r\n            localStorage.setItem(\"email\", values.email);\r\n            props.login(values, props.history);\r\n          }}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <div className=\"login-form\">\r\n              <div className=\"login-text\">Login</div>\r\n              <Form onSubmit={handleSubmit}>\r\n                <div className=\"input-wrapper mb-3\">\r\n                  <label className=\"\">Email</label>\r\n                  <Field\r\n                    className=\"\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Type your Email\"\r\n                    as={Input}\r\n                    prefix={\r\n                      <UserOutlined\r\n                        style={{\r\n                          fontSize: 22,\r\n                          color: \"#adadad\",\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"login-btn\">\r\n                  <div className=\"submit-login\">\r\n                    <Button htmlType=\"submit\" type=\"primary\" size=\"large\">\r\n                      Get Otp\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    // loading={props.loading}\r\n                    onClick={() => props.history.push(\"/login\")}\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Or Login using Password\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n              <div className=\"sign-up\">\r\n                <div className=\"sign-up-text-1\">Or Sign Up</div>\r\n                <div\r\n                  className=\"sign-up-text-2\"\r\n                  onClick={() => props.history.push(\"/register\")}\r\n                >\r\n                  SIGN UP\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.userAuth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(withRouter(LoginOtp));\r\n","import React, { useState } from \"react\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/actions/auth\";\r\nimport \"./otp.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Otp = (props) => {\r\n  let [otp, setOtp] = useState(\"\");\r\n  const [numInputs, setNumInputs] = useState(4);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n\r\n  const handleOtpChange = (otp) => {\r\n    setOtp(otp);\r\n  };\r\n\r\n  const clearOtp = () => {\r\n    setOtp((otp = \"\"));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const email = localStorage.getItem(\"email\");\r\n    e.preventDefault();\r\n    props.login({ email: email, otp: otp }, props.history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container__cust\">\r\n      <div className=\"view\">\r\n        <div className=\"card\">\r\n          <form onSubmit={handleSubmit}>\r\n            <p>Enter verification code</p>\r\n            <div className=\"margin-top--small\">\r\n              <OtpInput\r\n                inputStyle=\"inputStyle\"\r\n                numInputs={6}\r\n                isDisabled={isDisabled}\r\n                errorStyle=\"error\"\r\n                onChange={handleOtpChange}\r\n                separator={<span>-</span>}\r\n                isInputNum={true}\r\n                shouldAutoFocus\r\n                value={otp}\r\n              />\r\n            </div>\r\n            <div className=\"btn-row\">\r\n              <button\r\n                className=\"btn margin-top--large\"\r\n                type=\"button\"\r\n                disabled={isDisabled}\r\n                onClick={clearOtp}\r\n              >\r\n                Clear\r\n              </button>\r\n              <button\r\n                className=\"btn margin-top--large\"\r\n                disabled={otp.length < numInputs}\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(null, { login })(withRouter(Otp));\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Register from \"./components/userAuth/register.jsx\";\r\nimport Login from \"./components/userAuth/login\";\r\nimport Dashboard from \"./components/dashboard/Home.jsx\";\r\nimport RootModal from \"./components/modals/rootModal\";\r\nimport { PrivateRoute } from \"./components/utilityComponents/PrivateRoute\";\r\nimport CustomersShow from \"./components/customers/customersShow.jsx\";\r\nimport DepartmentsShow from \"./components/departments/DepartmentsShow\";\r\nimport EmployeesShow from \"./components/employees/EmployeesShow\";\r\nimport TicketShow from \"./components/tickets/TicketShow\";\r\nimport loginOtp from \"./components/userAuth/loginOtp\";\r\nimport Otp from \"./components/userAuth/Otp\";\r\n\r\nconst location = window.location.pathname;\r\nfunction App(props) {\r\n  console.log(location);\r\n  return (\r\n    <Router>\r\n      <RootModal />\r\n      <div>\r\n        <Switch>\r\n          <Redirect from=\"/\" to=\"/home\" exact />\r\n          <PrivateRoute path=\"/home\" component={Dashboard} />\r\n          <PrivateRoute\r\n            path=\"/customers\"\r\n            component={CustomersShow}\r\n            exact={true}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path=\"/departments\"\r\n            component={DepartmentsShow}\r\n            exact={true}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path=\"/employees\"\r\n            component={EmployeesShow}\r\n            exact={true}\r\n          />\r\n\r\n          <PrivateRoute path=\"/tickets\" component={TicketShow} exact={true} />\r\n          <Route path=\"/register\" component={Register} exact={true} />\r\n\r\n          <Route path=\"/login\" component={Login} exact={true} />\r\n          <Route path=\"/loginotp\" component={loginOtp} exact={true} />\r\n          <Route path=\"/otp\" component={Otp} exact={true} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  login: state.login,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import * as types from \"../constant\";\n\nconst initialState = {\n  customers: [],\n  loading1: false,\n  customer: {},\n  fetch: false,\n};\n\nconst customers = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_CUSTOMERS: {\n      return { ...state, customers: action.payload, loading1: false };\n    }\n    case types.GET_CUSTOMERSBYID: {\n      return { ...state, customer: action.payload };\n    }\n    case types.CUSTOMERS_LOADER: {\n      return { ...state, loading1: action.payload };\n    }\n    case types.CUSTOMERSBYID_LOADER: {\n      return { ...state, fetch: action.payload };\n    }\n    case \"RESET\": {\n      return initialState;\n    }\n    default:\n      return { ...state };\n  }\n};\n\nexport default customers;\n","import * as types from \"../constant\";\n\nconst initialState = {\n  department: [],\n  loading: false,\n};\n\nconst department = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_DEPARTMENTS: {\n      return { ...state, department: action.payload };\n    }\n\n    case types.DEPARTMENT_LOADER: {\n      return { ...state, loading: action.payload };\n    }\n    case \"RESET\": {\n      return initialState;\n    }\n    default:\n      return { ...state };\n  }\n};\n\nexport default department;\n","import * as types from \"../constant\";\r\n\r\nconst initialState = {\r\n  modalType: \"\",\r\n  modalProps: false,\r\n};\r\n\r\nconst modals = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n      return {\r\n        ...state,\r\n        modalType: action.payload.modalType,\r\n        modalProps: action.payload.modalProps,\r\n      };\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default modals;\r\n","import * as types from \"../constant\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n};\r\n\r\nconst userAuth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.LOGIN_LOADER: {\r\n      return {\r\n        loading: action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default userAuth;\r\n","import * as types from \"../constant\";\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  loading: false,\r\n  employee: {},\r\n  fetch: false,\r\n};\r\n\r\nconst employee = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_EMPLOYEES: {\r\n      return { ...state, employees: action.payload };\r\n    }\r\n    case types.EMPLOYEES_LOADER: {\r\n      return { ...state, loading: action.payload };\r\n    }\r\n    case types.EMPLOYEE_BY_ID: {\r\n      return { ...state, employee: action.payload };\r\n    }\r\n    case types.EMPLOYEE_BY_ID_LOADER: {\r\n      return { ...state, fetch: action.payload };\r\n    }\r\n    case \"RESET\": {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default employee;\r\n","import * as types from \"../constant\";\r\n\r\nconst initialState = {\r\n  tickets: [],\r\n  ticket: {},\r\n  loading: false,\r\n  fetch: false,\r\n};\r\n\r\nconst tickets = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_TICKETS: {\r\n      return { ...state, tickets: action.payload };\r\n    }\r\n    case types.GET_TICKETBYID: {\r\n      return { ...state, ticket: action.payload };\r\n    }\r\n    case types.TICKET_LOADER: {\r\n      return { ...state, loading: action.payload };\r\n    }\r\n    case types.TICKET_BY_ID_LOADER: {\r\n      return { ...state, fetch: action.payload };\r\n    }\r\n    case \"RESET\": {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default tickets;\r\n","import { combineReducers } from \"redux\";\nimport customers from \"./customerReducer\";\nimport department from \"../reducers/departmentReducer\";\nimport modals from \"../reducers/modalsReducers\";\nimport userAuth from \"../reducers/userReducer\";\nimport employee from \"../reducers/employeeReducer\";\nimport tickets from \"../reducers/ticketReducer\";\n\nconst rootReducer = combineReducers({\n  customers,\n  department,\n  modals,\n  userAuth,\n  employee,\n  tickets,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst createStoreWithMiddleware = composeEnhancers(applyMiddleware(thunk))(\n  createStore\n);\n\nexport default function configureStore(initialState) {\n  const store = createStoreWithMiddleware(rootReducer, initialState);\n  return store;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\n\nconst ele = (\n  <Provider store={store()}>\n    <App />\n  </Provider>\n);\nReactDOM.render(ele, document.getElementById(\"root\"));\n"],"sourceRoot":""}